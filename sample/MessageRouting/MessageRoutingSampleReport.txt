ESQL Source Code: /home/michele/git/ace-source/ACME_CoffeeRoasters_Application/Procedures.esql
User Trace Log : /tmp/work-dir/config/common/log/integration_server.work-dir.trace.0.txt
Execution time : 2025-09-02 11:15:24

IAM2 version : 1.0.6
-------------------------
Overview of Code Coverage
-------------------------
Total Functions & Procedures: 4

'.GatherData'
Lines : 15 (0 comment and 0 blank lines)
Executed Lines : 13 of 15 executable lines
Percent comment :   0.0%
Code coverage :  86.7%

'.Initialise'
Lines : 69 (1 comment and 1 blank lines)
Executed Lines : 1 of 67 executable lines
Percent comment :   1.5%
Code coverage :   1.5%

'.PrepareData'
Lines : 10 (0 comment and 1 blank lines)
Executed Lines : 3 of 9 executable lines
Percent comment :   0.0%
Code coverage :  33.3%

Total Executed Lines : 17 of 91 executable lines
Total Code Coverage : 18.7%

------------------------
Details of Code Coverage
------------------------
[x] line was executed
[ ] line was not executed
 line is comment or blank line

ESQL Function / Procedure 1: '.Initialise'

[ ] 1: 		BEGIN ATOMIC
 2: -- test
[ ] 3: 		IF Initialised = FALSE THEN
[x] 4: 			DECLARE ItemRef REFERENCE TO Inventory;
[ ] 5: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 6: 			SET ItemRef.Name = 'Peruvian';
[ ] 7: 			SET ItemRef.Quantity = 850;
[ ] 8: 			SET ItemRef.Price = 3.00;
[ ] 9: 			SET ItemRef.Strength = 1;
[ ] 10: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 11: 			SET ItemRef.Name = 'Indian';
[ ] 12: 			SET ItemRef.Quantity = 475;
[ ] 13: 			SET ItemRef.Price = 3.35;
[ ] 14: 			SET ItemRef.Strength = 2;
[ ] 15: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 16: 			SET ItemRef.Name = 'Moroccan';
[ ] 17: 			SET ItemRef.Quantity = 600;
[ ] 18: 			SET ItemRef.Price = 2.80;
[ ] 19: 			SET ItemRef.Strength = 3;
[ ] 20: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 21: 			SET ItemRef.Name = 'Mexican';
[ ] 22: 			SET ItemRef.Quantity = 350;
[ ] 23: 			SET ItemRef.Price = 3.00;
[ ] 24: 			SET ItemRef.Strength = 4;
[ ] 25: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 26: 			SET ItemRef.Name = 'Kenyan';
[ ] 27: 			SET ItemRef.Quantity = 380;
[ ] 28: 			SET ItemRef.Price = 3.30;
[ ] 29: 			SET ItemRef.Strength = 5;			
[ ] 30: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 31: 			SET ItemRef.Name = 'Guatamalan';
[ ] 32: 			SET ItemRef.Quantity = 180;
[ ] 33: 			SET ItemRef.Price = 3.10;
[ ] 34: 			SET ItemRef.Strength = 5;
[ ] 35: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item';
[ ] 36: 			SET ItemRef.Name = 'Colombian';
[ ] 37: 			SET ItemRef.Quantity = 715;
[ ] 38: 			SET ItemRef.Price = 3.05;
[ ] 39: 			SET ItemRef.Strength = 6;
[ ] 40: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 41: 			SET ItemRef.Name = 'Ethiopian';
[ ] 42: 			SET ItemRef.Quantity = 850;
[ ] 43: 			SET ItemRef.Price = 3.00;
[ ] 44: 			SET ItemRef.Strength = 7;
[ ] 45: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 46: 			SET ItemRef.Name = 'Vietnamese';
[ ] 47: 			SET ItemRef.Quantity = 815;
[ ] 48: 			SET ItemRef.Price = 2.95;
[ ] 49: 			SET ItemRef.Strength = 7;
[ ] 50: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 51: 			SET ItemRef.Name = 'Brazilian';
[ ] 52: 			SET ItemRef.Quantity = 160;
[ ] 53: 			SET ItemRef.Price = 3.25;
[ ] 54: 			SET ItemRef.Strength = 8;
[ ] 55: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 56: 			SET ItemRef.Name = 'Indonesian';
[ ] 57: 			SET ItemRef.Quantity = 200;
[ ] 58: 			SET ItemRef.Price = 2.75;
[ ] 59: 			SET ItemRef.Strength = 9;
[ ] 60: 			CREATE LASTCHILD OF Inventory AS ItemRef Type Name Name 'Item'; 
[ ] 61: 			SET ItemRef.Name = 'Sumatran';
[ ] 62: 			SET ItemRef.Quantity = 800;
[ ] 63: 			SET ItemRef.Price = 2.75;
[ ] 64: 			SET ItemRef.Strength = 10;			
[ ] 65: 			SET Initialised = TRUE;
[ ] 66: 		END IF;				
 67: 						 
[ ] 68: 		END;
[ ] 69: 	END;

ESQL Function / Procedure 2: '.GatherData'

[ ] 1: 		DECLARE DesiredQuantity INTEGER CAST(InputRoot.JSON.Data.Quantity AS INTEGER);
[x] 2: 		DECLARE DesiredStrength INTEGER CAST(InputRoot.JSON.Data.Strength AS INTEGER);
[x] 3: 		SET Environment.Inventory.Item[] = SELECT * FROM Inventory.Item[] AS I
[x] 4: 											WHERE I.Quantity > DesiredQuantity 
[x] 5: 											AND I.Strength = DesiredStrength;
[x] 6: 		SET Environment.Variables.Quantity = DesiredQuantity;
[x] 7: 		SET Environment.Variables.Strength = DesiredStrength;
[x] 8: 		SET Environment.Variables.NumberOfCoffeesCorrectStrength = CARDINALITY(Environment.Inventory.Item[]);
[x] 9: 		DECLARE datetimepattern CHAR 'yyyyMMdd HH:mm:ss ZZZ';
[ ] 10: 		SET Environment.Variables.Datetime = CAST(CURRENT_TIMESTAMP AS CHAR FORMAT datetimepattern);
[x] 11: 		SET Environment.Variables.Hostname = GetHostname();
[x] 12: 		SET Environment.Variables.Application = ApplicationLabel;
[x] 13: 		SET Environment.Variables.Flow = MessageFlowLabel;
[x] 14: 		SET Environment.Variables.SoftwareVersion = BrokerVersion;		
[x] 15: 	END;

ESQL Function / Procedure 3: '.PrepareData'

 1: 
[ ] 2: 		DECLARE ItemRef REFERENCE TO Environment.Inventory;
[ ] 3: 		MOVE ItemRef FIRSTCHILD;
[ ] 4: 		DECLARE Message CHAR ''; 
[ ] 5: 		WHILE LASTMOVE(ItemRef) DO
[x] 6: 			SET Message = Message || '(' || ItemRef.Name || ' has available quantity of ' || CAST(ItemRef.Quantity AS CHAR) || ' and has price ' || CAST(ItemRef.Price AS CHAR) || ')';
[x] 7: 			MOVE ItemRef NEXTSIBLING;
[ ] 8: 		END WHILE;
[ ] 9: 		SET Environment.Variables.MessageDetail = Message;
[x] 10: 	END;
